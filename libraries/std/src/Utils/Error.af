.needs <std>

import string from "String";
import Render from "Utils/Error/Render";

class Error {
	contract {
		private const string _typeName = __typeName__;
		private mutable string<> _render = NULL;
	};

    private const string message = message.copy();

    public void setRender(const string<> render) {
        if my._render != NULL
            panic("Render already set.");

        my._render = render;
    };

    private string stdErrorMessage() : Render {
        return `Error: {my.message}`;   
    };

    Error init(const string message) {
        return my;
    };

    public string render() {
        if my._render == NULL
            return `Error: {my._typeName}`;
        return my._render();
    };

    public bool is(const string type) {
        return my._typeName == type;
    };

    public string toString() {
        return my.render();
    };
};
