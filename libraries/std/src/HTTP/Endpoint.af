.needs <std>
import string from "String";
import Server from "HTTP/Server";
import HTTPMethod, HTTPResponce, HTTPMessage from "HTTP";
import {methodToString} from "HTTP" under http;
import {print} from "String" under str;
import {printHex, printInt} from "io" under io;

class Endpoint {
    contract {
        const adr imp = imp;
        const string path = path;
        HTTPMethod method;
    };
    
    Endpoint init(const any<Server, HTTPMessage> imp, const Server context, const string path, const HTTPMethod method) {
        my.method = method;
        context.addEndpoint(my);
    };
    
    string toString() {
        return `{http.methodToString(my.method)} {my.path}`;
    };

    HTTPResponce _call(const Server context, * const HTTPMessage msg) {
        const let imp = my.imp;
        return imp(context, msg);
    };
};
