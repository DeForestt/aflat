.needs "/std/head/math.gs"
.needs "/std/head/io.gs"
.needs "/std/head/strings.gs"
.needs "/std/head/asm.gs"
.needs "/std/head/std.gs"

int readString(adr pointer){
        char input = ' ';
        char nl = ascii(10);
        char null = ascii(0);
        while(input != nl){
                pull ?input;
                pointer =: input;
                if(input == nl){pointer =: null};
                pointer = pointer + 1;
        };
        pointer =: null;
        return  0;
};

int clearInput(){
        char nl = ascii(10);
        char buffer = ' ';
        while (buffer != nl){pull ?buffer};
        return 0;

int print(adr input){
        int len = len(input);
        sys_write(1, input, len);
        return 0;
};

char toChar(int input){
        char output = '0';
        if(input > 9){output = 'A'};
        if(input == 0){output = '0'};
        if(input == 1){output = '1'};
        if(input == 2){output = '2'};
        if(input == 3){output = '3'};
        if(input == 4){output = '4'};
        if(input == 5){output = '5'};
        if(input == 6){output = '6'};
        if(input == 7){output = '7'};
        if(input == 8){output = '8'};
        if(input == 9){output = '9'};
        return output;
};

int toInt(char input){
        if(input == '0'){return 0};
        if(input == '1'){return 1};
        if(input == '2'){return 2};
        if(input == '3'){return 3};
        if(input == '4'){return 4};
        if(input == '5'){return 5};
        if(input == '6'){return 6};
        if(input == '7'){return 7};
        if(input == '8'){return 8};
        if(input == '9'){return 9};
        return 0;
};

 int pullInt(int sigfigs){
        int i = sigfigs - 1;
        int value = 0;
        int h = 0;
        int factor = 0;
        char input;
        while (i > -1){
                pull ?input;
                h = toInt(input);
                factor = exp(10, i);
                h = factor * h;
                value = value + h;
                i = i - 1;
        };
        clearInput();
        return value;
 };

int printInt(int input){
        int h = 0;
        int ten = 10;
        int factor = 0;
        int i = 0;
        h = input * 1;
        while (h != 0){
                h = h / ten;
                i = i + 1;
        };
        i = i - 1;

        char out;
        while (i > -1){
                factor = exp(10, i);
                h = input / factor;
                out = toChar(h);
                push ?out;
                h = h * factor;
                input = input - h;
                i = i - 1;
        };
        return 0;
};

File createFile(adr fileName){
        File file = malloc(30);
        file.file = sys_create(fileName, 777);
        int test = file.file * 1;
        if(test < 1){
                return #0;
        };
        return file;
};

File openFile(adr fileName){
        File file = malloc(30);
        adr flag = 2;
        file.file = sys_open(fileName, flag, 777);
        int test = file.file * 1;
        if(test < 0){
                return #0;
        };
        file.info = getFileInfo(file.file);
        file.fileName = fileName;
        return file;
};

int closFile(File file){
        return sys_close(file.file);
};

int writeTo(File file, adr text){
        int length = len(text);
        int ret = sys_write(file.file, text, length);
        return ret;
};

int readFrom(File file, adr pointer, char delim, char term){
        char input = ' ';
        char null = ascii(0);
        while(input != delim){
                sys_read(file.file, ?input, 1);
                if(input == term){return 1;};
                pointer =: input;
                if(input == delim){pointer =: null};
                pointer = pointer + 1;
        };
        pointer =: null;
        return  0;
};

FileInfo getFileInfo(int file){
        FileInfo info = malloc(52);
        sys_fstat(file, info);
        return info;
};