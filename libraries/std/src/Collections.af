.needs "/std/head/std.gs"
.needs "/std/head/Collections.gs"

DoubleNode newDoubleNode(){
    DoubleNode new = malloc(24);
    new.next = #0;
    new.prev = #0;
    new.next = #0;
};

ListNode newNode(){
    ListNode new = malloc(16);
    new.next = #0;
    new.data = #0;
    return new;
};

Stack newStack(){
    Stack new = malloc(12);
    new.head = #0;
    new.count = 0;

    return new;
};

int push@Stack(adr data){
    ListNode new = newNode();
    new.data = data;
    ListNode myHead;
    myHead = my.head;
    new.next = myHead;
    my.head = new;
    my.count = my.count + 1;
    return 0;
};

adr peek@Stack(){
    return my.head.data;
};

adr pop@Stack(){
    adr out;
    out = my.head.data;
    ListNode next;
    next = my.head.next;
    my.head = next;
    return out;
};

List newList(){
    List new = malloc(16);
    new.head = #0;
    new.tail = #0;
    return new;
};

int append@List(adr data){
    DoubleNode new = newDoubleNode();
    new.data = data;
    
    if (my.head == #0){
        my.head == new;
        my.tail == new;
        return 0;
    };

    adr last = my.tail;
    new.prev = last;
    my.tail = new;
    return 0;
};

int len@List(){
    int i = 0;
    DoubleNode curr;
    curr = my.head;
    while (curr.next != #0){
        curr = curr.next;
        i = i + 1;
    };

    return i;
};