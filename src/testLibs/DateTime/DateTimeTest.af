.needs <std>

import {case, require} from "ATest.af" under test;
import TestSuite from "ATest.af";
import string from "String";
import List from "Collections";
import Product from "Utils/Product";
import {print} from "String" under str;

import {mmddyyyyToDate, Now} from "DateTime" under dt;
import DateTime from "DateTime";

private bool test_mmddyyyyToDate() : test.case("mmddyyyyToDate") {
    let invalid = dt.mmddyyyyToDate("01-m3-2019");
    let invalid2 = dt.mmddyyyyToDate("Not a date");
    let valid = dt.mmddyyyyToDate("01-03-2019");
    DateTime v = valid.value(NULL);
    str.print(errorCode);
    return (
        test.require(invalid.hasError(), "invalid date should return error") &
        test.require(invalid2.hasError(), "Non-date should be an error") &
        test.require(!valid.hasError(), "valid date should not return error") &
        test.require(v.getYear() == 2019, "year should be 2019") &
        test.require(v.getMonth() == 1, "month should be 1") &
        test.require(v.getDay() == 3, "day should be 3")
    );
};

export TestSuite getSuite() {
    let suite = new TestSuite("DateTime");

    suite.addCase(test_mmddyyyyToDate);    

    return suite;
};